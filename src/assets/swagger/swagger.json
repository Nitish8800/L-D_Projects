{
  "openapi": "3.0.1",
  "info": {
    "description": "This is Video Management System App",
    "version": "1.0.5",
    "title": "Video Management System",
    "contact": {
      "email": "nitish.kumar@indusnet.co.in"
    }
  },
  "tags": [
    {
      "name": "Users",
      "description": "All User Access"
    },
    {
      "name": "Admin",
      "description": "Only Admin Access"
    }
  ],

  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "User Signup",
        "description": "It will register new users data",
        "requestBody": {
          "description": "An object defining our schema for this request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": ["first_name", "last_name", "password", "email"],
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createSuccessResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Users Login",
        "description": "It will Login Users",
        "requestBody": {
          "description": "An object defining our schema for this request",
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "password"],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Get User Details",
        "description": "It will get users data",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/verify/{token}": {
      "get": {
        "tags": ["Users"],
        "summary": " User Can Verify",
        "description": "It will verify users mail",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Please Put Your Email Verification Token Id & Please check your email for verified",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/forgot-password": {
      "post": {
        "tags": ["Users"],
        "summary": "If User Forget the Password and Send OTP to User Mail",
        "description": "It will send OTP to User Mail",
        "requestBody": {
          "description": "An object defining our schema for this request",
          "content": {
            "application/json": {
              "schema": {
                "required": ["email"],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObjectForSendMail"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/change-password": {
      "post": {
        "tags": ["Users"],
        "summary": "If will change password by OTP",
        "description": " Please Check Your Email Id for get OTP and If OTP is invalid or has been expired. Please enter a valid OTP or request for a new one ",
        "requestBody": {
          "description": "An object defining our schema for this request",
          "content": {
            "application/json": {
              "schema": {
                "required": ["email", "otpCode", "password"],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "otpCode": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "get": {
        "tags": ["Users"],
        "summary": "Logout User",
        "description": "It will Logout User",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logoutResponseObject"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badRequestResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forbiddenResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serverErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "serverErrorResponse": {
        "title": "Server Error Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        },
        "example": {
          "status": 500,
          "message": "Something Went Wrong",
          "error": "Error"
        }
      },
      "badRequestResponse": {
        "title": "Bad Request Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "validationErrors": {
            "type": "string"
          }
        },
        "example": {
          "status": 400,
          "message": "Something Went Wrong",
          "validationErrors": "Error"
        }
      },
      "forbiddenResponse": {
        "title": "Forbidden Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "status": 403,
          "message": "Forbidden"
        }
      },
      "noDataResponseObject": {
        "title": "No Data Object Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {}
          }
        },
        "example": {
          "status": 204,
          "message": "No Data Found",
          "data": {}
        }
      },
      "createSuccessResponseObject": {
        "title": "Create Success Response",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "example": {
          "success": true,
          "status": 201,
          "message": "Created Successfully",
          "data": {
            "first_name": "Riyaz_2",
            "last_name": "Ahmad_2",
            "password": "Riyaz@8800",
            "email": "riyaz.ahmad@indusnet.co.in"
          }
        }
      },
      "successResponseObject": {
        "title": "Success Response",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "example": {
          "success": true,
          "status": 200,
          "message": "Successful",
          "data": {}
        }
      },
      "successResponseObjectForSendMail": {
        "title": "Success Response",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": true,
          "status": 200,
          "message": "Successfully Sent Mail"
        }
      },
      "loginResponseObject": {
        "title": "Login Success Response",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "tokens": {
                "type": "object",
                "properties": {
                  "Access token": {
                    "type": "string"
                  },
                  "Access Token Expiry": {
                    "type": "string"
                  },
                  "Refresh Token": {
                    "type": "string"
                  },
                  "Refresh Token Expiry": {
                    "type": "string"
                  }
                }
              },
              "user": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "example": {
          "success": true,
          "status": 200,
          "message": "Login Successfully",
          "data": {
            "email": "nk880093@gmail.com",
            "password": "Niku@8800"
          }
        }
      },
      "logoutResponseObject": {
        "title": "Log Out Success Response",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "success": true,
          "status": 200,
          "message": "Log Out Successfully",
          "data": {}
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "isAdmin": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "otp": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "expireIn": {
            "type": "string"
          },
          "otpCode": {
            "$ref": "#/components/schemas/user"
          }
        }
      }
    }
  }
}
